from _typeshed import Incomplete

from nltk.draw import CFGEditor as CFGEditor
from nltk.draw import TreeSegmentWidget as TreeSegmentWidget
from nltk.draw import tree_to_treesegment as tree_to_treesegment
from nltk.draw.util import CanvasFrame as CanvasFrame
from nltk.draw.util import EntryDialog as EntryDialog
from nltk.draw.util import ShowText as ShowText
from nltk.draw.util import TextWidget as TextWidget
from nltk.parse import SteppingShiftReduceParser as SteppingShiftReduceParser
from nltk.tree import Tree as Tree
from nltk.util import in_idle as in_idle

class ShiftReduceApp:
    def __init__(
        self, grammar: Incomplete, sent: Incomplete, trace: int = 0
    ) -> None: ...
    def destroy(self, *e: Incomplete) -> None: ...
    def reset(self, *e: Incomplete) -> None: ...
    def step(self, *e: Incomplete) -> Incomplete: ...
    def shift(self, *e: Incomplete) -> Incomplete: ...
    def reduce(self, *e: Incomplete) -> Incomplete: ...
    def undo(self, *e: Incomplete) -> None: ...
    def postscript(self, *e: Incomplete) -> None: ...
    def mainloop(self, *args: Incomplete, **kwargs: Incomplete) -> None: ...
    def resize(self, size: Incomplete | None = None) -> None: ...
    def help(self, *e: Incomplete) -> None: ...
    def about(self, *e: Incomplete) -> None: ...
    def edit_grammar(self, *e: Incomplete) -> None: ...
    def set_grammar(self, grammar: Incomplete) -> None: ...
    def edit_sentence(self, *e: Incomplete) -> None: ...
    def set_sentence(self, sent: Incomplete) -> None: ...

def app() -> None: ...
