import pickle
from http.server import BaseHTTPRequestHandler

from _typeshed import Incomplete

__all__ = ["app"]

class MyServerHandler(BaseHTTPRequestHandler):
    def do_HEAD(self) -> None: ...
    def do_GET(self) -> None: ...
    def send_head(self, type: Incomplete | None = None) -> None: ...
    def log_message(self, format: Incomplete, *args: Incomplete) -> None: ...

class RestrictedUnpickler(pickle.Unpickler):
    def find_class(self, module: Incomplete, name: Incomplete) -> None: ...

class Reference:
    word: Incomplete
    synset_relations: Incomplete
    def __init__(
        self, word: Incomplete, synset_relations: Incomplete = ...
    ) -> None: ...
    def encode(self) -> Incomplete: ...
    @staticmethod
    def decode(string: Incomplete) -> Incomplete: ...
    def toggle_synset_relation(
        self, synset: Incomplete, relation: Incomplete
    ) -> Incomplete: ...
    def toggle_synset(self, synset: Incomplete) -> Incomplete: ...

def app() -> None: ...
