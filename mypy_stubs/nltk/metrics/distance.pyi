from typing import Union

from _typeshed import Incomplete

def binary_distance(
    label1: Union[int, str], label2: Union[int, str]
) -> float: ...
def edit_distance(
    s1: Incomplete,
    s2: Incomplete,
    substitution_cost: int = 1,
    transpositions: bool = False,
) -> Incomplete: ...
def edit_distance_align(
    s1: Incomplete, s2: Incomplete, substitution_cost: int = 1
) -> Incomplete: ...
def jaccard_distance(label1: Incomplete, label2: Incomplete) -> Incomplete: ...
def masi_distance(label1: Incomplete, label2: Incomplete) -> Incomplete: ...
def interval_distance(
    label1: Incomplete, label2: Incomplete
) -> Incomplete: ...
def presence(label: Incomplete) -> Incomplete: ...
def fractional_presence(label: Incomplete) -> Incomplete: ...
def custom_distance(file: Incomplete) -> Incomplete: ...
def jaro_similarity(s1: Incomplete, s2: Incomplete) -> Incomplete: ...
def jaro_winkler_similarity(
    s1: Incomplete, s2: Incomplete, p: float = 0.1, max_l: int = 4
) -> Incomplete: ...
def demo() -> None: ...
