from collections.abc import Generator

from _typeshed import Incomplete

from nltk.corpus.reader import CorpusReader as CorpusReader

class SentiWordNetCorpusReader(CorpusReader):
    def __init__(
        self, root: Incomplete, fileids: Incomplete, encoding: str = "utf-8"
    ) -> None: ...
    def senti_synset(self, *vals: Incomplete) -> Incomplete: ...
    def senti_synsets(
        self, string: Incomplete, pos: Incomplete | None = None
    ) -> Incomplete: ...
    def all_senti_synsets(self) -> Generator[Incomplete, None, None]: ...

class SentiSynset:
    synset: Incomplete
    def __init__(
        self, pos_score: Incomplete, neg_score: Incomplete, synset: Incomplete
    ) -> None: ...
    def pos_score(self) -> Incomplete: ...
    def neg_score(self) -> Incomplete: ...
    def obj_score(self) -> Incomplete: ...
