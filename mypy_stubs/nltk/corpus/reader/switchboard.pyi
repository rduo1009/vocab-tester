from _typeshed import Incomplete

from nltk.corpus.reader.api import *
from nltk.corpus.reader.util import *
from nltk.tag import map_tag as map_tag
from nltk.tag import str2tuple as str2tuple

class SwitchboardTurn(list):
    speaker: Incomplete
    id: Incomplete
    def __init__(
        self, words: Incomplete, speaker: Incomplete, id: Incomplete
    ) -> None: ...

class SwitchboardCorpusReader(CorpusReader):
    def __init__(
        self, root: Incomplete, tagset: Incomplete | None = None
    ) -> None: ...
    def words(self) -> Incomplete: ...
    def tagged_words(self, tagset: Incomplete | None = None) -> Incomplete: ...
    def turns(self) -> Incomplete: ...
    def tagged_turns(self, tagset: Incomplete | None = None) -> Incomplete: ...
    def discourses(self) -> Incomplete: ...
    def tagged_discourses(self, tagset: bool = False) -> Incomplete: ...
