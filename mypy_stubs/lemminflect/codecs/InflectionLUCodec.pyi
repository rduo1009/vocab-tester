# Auto-generated by monkeytype

from typing import (
    Any,
    Dict,
    Tuple,
)

class InflectionLUCodec:
    penn_dict: dict[str, list[str]]
    slex_dict: dict[str, list[str]]
    @classmethod
    def fromString(cls, line: str) -> Any: ...
    @classmethod
    def load(
        cls, fn: str
    ) -> Dict[
        str,
        Dict[
            str,
            Tuple[str, ...],
        ],
    ]: ...
    @staticmethod
    def updateForAuxMod(
        d: Dict[
            str,
            Dict[str, Tuple[str, ...]],
        ],
    ) -> Dict[
        str,
        Dict[str, Tuple[str, ...]],
    ]: ...
    @classmethod
    def toString(
        cls: object,
        word: str,
        category: str,
        forms_dict: dict[str, str],
    ) -> str: ...
