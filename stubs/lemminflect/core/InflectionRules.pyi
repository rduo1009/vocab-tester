# Auto-generated by monkeytype

from typing import (
    Dict,
    List,
)

class InflectionRules:
    @classmethod
    def buildDoubledAdjAdv(cls, base: str) -> List[str]: ...
    @classmethod
    def buildDoubledVerb(cls, base: str) -> List[str]: ...
    @classmethod
    def buildGrecNoun(cls, base: str) -> List[str]: ...
    @classmethod
    def buildRegAdjAdv(cls, base: str) -> List[str]: ...
    @classmethod
    def buildRegNoun(cls, base: str) -> List[str]: ...
    @classmethod
    def buildRegVerb(cls, base: str) -> List[str]: ...
    @classmethod
    def morph(cls, base: str, upos: str, infl_type: str) -> Dict[str, str]: ...

class MorphologyStyleModel:
    def __init__(self, kitype: str = ..., model_fn: str = ...): ...
    def getStyle(self, lemma: str, upos: str) -> str: ...
